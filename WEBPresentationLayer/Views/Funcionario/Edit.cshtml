@using Entities.Enums
@model WEBPresentationLayer.Models.Funcionario.FuncionarioUpdateViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>FuncionarioUpdateViewModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <input asp-for="Id" class="form-control" type="hidden" />
            </div>
            <div class="form-group">
                <label asp-for="Nome" class="control-label"></label>
                <input asp-for="Nome" class="form-control" />
                <span asp-validation-for="Nome" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Sobrenome" class="control-label"></label>
                <input asp-for="Sobrenome" class="form-control" />
                <span asp-validation-for="Sobrenome" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Senha" class="control-label"></label>
                <input asp-for="Senha" class="form-control" />
                <span asp-validation-for="Senha" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DataNascimento" class="control-label"></label>
                <input asp-for="DataNascimento" class="form-control" />
                <span asp-validation-for="DataNascimento" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Genero" class="control-label"></label>
                @{
                    string[] valores = Enum.GetNames<Genero>();
                }

                <select class="form-control" name="Genero">
                    @for(int i = 0; i < valores.Length; i++)
                    {
                        <option value="@i">@valores[i].Replace("_"," ")</option>
                    }
                </select>


                <span asp-validation-for="Genero" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="NivelDeAcesso" class="control-label"></label>
                @{
                    string[] valor = Enum.GetNames<NivelDeAcesso>();
                }

                <select class="form-control" name="NivelDeAcesso">
                    @for(int i = 0; i < valor.Length; i++)
                    {
                        <option value="@i">@valor[i].Replace("_"," ")</option>
                    }    
                </select>


                <span asp-validation-for="NivelDeAcesso" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
